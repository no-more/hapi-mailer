{
  "_args": [
    [
      {
        "raw": "git+https://github.com/trippnology/hapi-mailer.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "git+https://github.com/trippnology/hapi-mailer.git",
        "spec": "git+https://github.com/trippnology/hapi-mailer.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:trippnology/hapi-mailer.git",
          "sshUrl": "git+ssh://git@github.com/trippnology/hapi-mailer.git",
          "httpsUrl": "git+https://github.com/trippnology/hapi-mailer.git",
          "gitUrl": "git://github.com/trippnology/hapi-mailer.git",
          "shortcut": "github:trippnology/hapi-mailer",
          "directUrl": "https://raw.githubusercontent.com/trippnology/hapi-mailer/master/package.json"
        }
      }
    ]
  ],
  "_from": "git+https://github.com/trippnology/hapi-mailer.git#667fd5b1a709bef6c86f2a52a3b338d7387eae7b",
  "_id": "@trippnology/hapi-mailer@5.0.1",
  "_inCache": true,
  "_location": "/@trippnology/hapi-mailer",
  "_phantomChildren": {
    "clean-css": "1.1.7",
    "cli-color": "0.3.3",
    "commander": "2.9.0",
    "css-select": "1.0.0",
    "cssom": "0.3.0",
    "datauri": "0.2.1",
    "entities": "1.1.1",
    "htmlparser2": "3.8.3",
    "isemail": "2.2.1",
    "libmime": "1.2.0",
    "lodash": "3.10.1",
    "mailcomposer": "2.1.0",
    "moment": "2.17.1",
    "needle": "0.11.0",
    "nodemailer-direct-transport": "1.1.0",
    "nodemailer-smtp-transport": "1.1.0",
    "request": "2.79.0",
    "topo": "2.0.2",
    "uglify-js": "2.7.5",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "git+https://github.com/trippnology/hapi-mailer.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "git+https://github.com/trippnology/hapi-mailer.git",
    "spec": "git+https://github.com/trippnology/hapi-mailer.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:trippnology/hapi-mailer.git",
      "sshUrl": "git+ssh://git@github.com/trippnology/hapi-mailer.git",
      "httpsUrl": "git+https://github.com/trippnology/hapi-mailer.git",
      "gitUrl": "git://github.com/trippnology/hapi-mailer.git",
      "shortcut": "github:trippnology/hapi-mailer",
      "directUrl": "https://raw.githubusercontent.com/trippnology/hapi-mailer/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/trippnology/hapi-mailer.git#667fd5b1a709bef6c86f2a52a3b338d7387eae7b",
  "_shasum": "22421def58666a2e95d25835a2de9bbda2211c2c",
  "_shrinkwrap": null,
  "_spec": "git+https://github.com/trippnology/hapi-mailer.git",
  "_where": "D:\\www\\Customers\\yopey\\ybf",
  "bugs": {
    "url": "https://github.com/trippnology/hapi-mailer/issues"
  },
  "dependencies": {
    "hoek": "^5.0.3",
    "items": "^2.1.1",
    "joi": "^13.2.0",
    "juice": "^4.2.3",
    "nodemailer": "^4.6.4",
    "nodemailer-plugin-inline-base64": "^2.1.1"
  },
  "description": "Mailer plugin for hapi.",
  "devDependencies": {
    "@nesive/eslint-config": "1.x.x",
    "code": "^5.2.0",
    "handlebars": "^4.0.11",
    "hapi": "^17.4.0",
    "lab": "^15.4.5",
    "nodemailer-stub-transport": "^1.1.0",
    "sinon": "^5.0.7",
    "vision": "^5.3.2"
  },
  "gitHead": "667fd5b1a709bef6c86f2a52a3b338d7387eae7b",
  "homepage": "https://github.com/no-more/hapi-mailer",
  "keywords": [
    "hapi",
    "plugin",
    "email",
    "mailer",
    "nodemailer"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "@no-more/hapi-mailer",
  "optionalDependencies": {},
  "peerDependencies": {
    "hapi": ">=17.0.0",
    "vision": ">=5.0.0"
  },
  "readme": "# Hapi Mailer\r\n\r\n[![npm](https://img.shields.io/npm/v/@trippnology/hapi-mailer.svg)](https://www.npmjs.com/package/@trippnology/hapi-mailer)\r\n[![Build Status](https://travis-ci.org/trippnology/hapi-mailer.svg?branch=master)](https://travis-ci.org/trippnology/hapi-mailer)\r\n[![Dependency Status](https://david-dm.org/trippnology/hapi-mailer.svg)](https://david-dm.org/trippnology/hapi-mailer)\r\n\r\nA wrapper around Nodemailer used for sending email. It can be used with or without a template engine.\r\n\r\n## Installation\r\n\r\n```\r\nnpm install --save @trippnology/hapi-mailer\r\n```\r\n\r\n## Usage\r\n\r\n### Server configuration:\r\n\r\nThe plugin accepts the following configuration options:\r\n\r\n* `transport`: A Nodemailer transport mechanism. If it is not set `nodemailer-direct-transport` transport is used. If it is a regular object `nodemailer-smtp-transport` is used and the value is passed as SMTP configuration.\r\n* `views`: The views configuration as described in the server's [`views`](https://github.com/hapijs/vision/blob/master/API.md#serverviewsoptions) option. Note that due to the way node `require()` operates, plugins must require rendering engines directly and pass the engine using the `engines.module` option. Note that relative paths are relative to the plugin root, not the working directory or the application registering the plugin.\r\n* `inlineImages`: A boolean value to convert Base64 images to attachments. Defaults to `true`.\r\n* `inlineStyles`: A boolean value to inline CSS in `<style>` tags. Defaults to `true`.\r\n\r\n**Example:**\r\n\r\n```\r\nconst Handlebars = require('handlebars');\r\nconst Path = require('path');\r\nconst Vision = require('vision');\r\n\r\nconst HapiMailer = {\r\n  register: require('@trippnology/hapi-mailer'),\r\n  options: {\r\n    transport: {\r\n      service: 'Gmail',\r\n      auth: {\r\n        user: 'example@gmail.com',\r\n        pass: 'password'\r\n      }\r\n    },\r\n    views: {\r\n      engines: {\r\n        html: {\r\n          module: Handlebars.create(),\r\n          path: Path.join(__dirname, 'src/views/emails')\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nserver.register([Vision, HapiMailer], (err) => {\r\n  // ...\r\n});\r\n\r\n```\r\n\r\n### Handler:\r\n\r\nIn handlers, the `Mailer` object can be accessed as `request.server.plugins['hapi-mailer']`. It has a `send()` function which can be used to send an email. It accepts the following configuration options:\r\n\r\n* `data`: Defines the mail content the same way as Nodemailer. There is only one additional property `context`, which is an optional object used by the template to render context-specific result.\r\n* `callback`: It is a callback function to run once the message is delivered or it failed.\r\n\r\n**Example:**\r\n\r\n```\r\nconst handler = function(request, reply) {\r\n  const data = {\r\n    from: 'example@gmail.com',\r\n    to: 'to@example.com',\r\n    subject: 'Example Subject',\r\n    html: {\r\n      path: 'handlebars.html'\r\n    },\r\n    context: {\r\n      name: 'Example User'\r\n    }\r\n  };\r\n\r\n  const Mailer = request.server.plugins['hapi-mailer'];\r\n  Mailer.send(data, (err, info) => reply());\r\n};\r\n\r\nserver.route({ method: 'POST', path: '/', handler: handler });\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/no-more/hapi-mailer.git"
  },
  "scripts": {
    "test": "lab --assert code --lint --threshold 100 --verbose"
  },
  "version": "1.0.0"
}
